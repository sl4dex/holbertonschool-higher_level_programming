importing module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

Test 1
>>> bg.integer_validator("my_int", 12)
    

Test 2
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    . . .
TypeError: name must be an integer

Test 3
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    . . .
ValueError: distance must be greater than 0

Test 4 no 2d arg
>>> bg.integer_validator("empty")
Traceback (most recent call last):
    . . .
TypeError: integer_validator() missing 1 required positional argument: 'value'

Test 5
>>> bg.integer_validator("distance", 3.0)
Traceback (most recent call last):
    . . .
TypeError: distance must be an integer

Test 6
>>> bg.integer_validator("distance", 3.0)
Traceback (most recent call last):
    . . .
TypeError: distance must be an integer

Test 7
>>> bg.integer_validator("distance", float('inf'))
Traceback (most recent call last):
    . . .
TypeError: distance must be an integer

Test 8
>>> bg.integer_validator("distance", True)
Traceback (most recent call last):
    . . .
TypeError: distance must be an integer

Test 8
>>> bg.integer_validator(123, 2)
    

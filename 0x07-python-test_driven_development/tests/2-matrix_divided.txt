importing module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test 1
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test 2
>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0]]

Test 3
>>> matrix = [[1]]
>>> matrix_divided(matrix, 3)
[[0.33]]

Test 4
>>> matrix = [[1, 2, 3], [4, "5", 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    . . .
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 5
>>> matrix = [[1, 2, 3], [4, 5, 6], "list"]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    . . .
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 6
>>> matrix = [1]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    . . .
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 7
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    . . .
TypeError: Each row of the matrix must have the same size

Test 8
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "h")
Traceback (most recent call last):
    . . .
TypeError: div must be a number

Test 9
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    . . .
ZeroDivisionError: division by zero
